{"version":3,"sources":["components/Message.js","components/Home/auth/AuthService.js","components/Home/auth/Signup.js","components/Home/auth/Login.js","components/Home/Home.js","components/Map/MapTest.js","components/Profile/YourRoutes/YourRoutes.js","components/Profile/YourRoutes/yelp.js","components/Profile/CreateRoutes/CreateRoutes.jsx","components/Profile/YourRoutes/SavedRoutes/SavedRoutes.js","components/Profile/ProfileContainer/ProfileContainer.js","components/Navbar/NavBar.js","components/AllRoutes/AllRoutes.js","App.js","serviceWorker.js","index.js"],"names":["Component","AuthService","_this","this","Object","classCallCheck","signup","user","formData","FormData","keys","forEach","key","append","service","post","headers","Content-Type","then","response","data","login","loggedin","get","logout","axios","create","baseURL","concat","process","withCredentials","Signup","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","e","preventDefault","_this$state","state","username","email","password","authService","setState","redirect","props","getUser","handleChange","_e$target","target","name","value","objectSpread","defineProperty","_this2","react_default","a","createElement","Redirect","to","class","onSubmit","type","onChange","Link","id","Login","console","log","Home","toggleSignupLogin","showSignupOrLogin","fetchUser","Route","path","render","Signup_Signup","Login_Login","onClick","src","alt","className","MapWithADirectionsRenderer","require","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","lifecycle","componentDidMount","restaurants","sendRouteData","DirectionsService","google","maps","waypointsArr","map","restaurant","index","length","push","location","LatLng","coordinates","latitude","longitude","route","origin","waypoints","destination","travelMode","TravelMode","WALKING","result","status","DirectionsStatus","OK","directions","error","componentDidUpdate","preProps","lib","defaultZoom","defaultCenter","lat","lng","defaultOptions","styles","elementType","stylers","color","visibility","featureType","options","polylineOptions","strokeColor","MapTest","YourRoutes","getUserRoutes","userRoutesArr","track","createdTrack","userRoutes","catch","err","_this$state$createRou","createRoutes","routesName","category","routesType","getRoute","_id","handleFormSubmitUPDATE","_this$state$createRou2","updateRoute","handleChangeUPDATE","newRoute","deleteRoute","showRoutesDetails","showRouteData","scrollToRecipe","showAllYourRoutes","routes","backgroundImage","image","placeholder","autoComplete","userRoute","duration","date","hour","restaurantOfRoute","restaurantPhoto","restaurantName","rating","price","phone","MapTest_MapTest","InputYelp","_this$state$restauran","term","getRestaurants","searchRestaurant","CreateRoutes","photo","handleChangeCREATE","files","JSON","stringify","addRestaurant","toConsumableArray","image_url","address1","selectedRestaurants","yelp","clasName","SavedRoutes","showSavedRoutesButton","showSavedRoutes","savedRoutes","element","Profile","_this$state$user","updateProfile","createRouteButton","createRoutesToggle","showUpdateProfileButton","changeRoutes","yourRoutes","window","scrollBy","top","document","querySelector","clientHeight","left","behavior","showRoutesType","YourRoutes_YourRoutes_YourRoutes","SavedRoutes_SavedRoutes","createRoutesOrShowRoutes","CreateRoutes_CreateRoutes","getRoutes","showUpdateProfile","imgPath","NavBar","AllRoutes","getAllRoutes","allRoutes","followTrack","printAllRoutes","creatorID","href","url","city","App","inputYelp","welcome","NavBar_NavBar","ProfileContainer_ProfileContainer_Profile","AllRoutes_AllRoutes_AllRoutes","Home_Home_Home","Boolean","hostname","match","ReactDOM","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e8c2aa0.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Message extends Component {\n  render() {\n    const message = this.props.user ? <p>Hola usuario</p> : <p>Hola no usuario</p>\n    return (\n      <div>\n        {message}\n      </div>\n    )\n  }\n}\n","import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    })\n  }\n\n  signup = (user) => {\n    const formData = new FormData();\n    Object.keys(user).forEach(key => formData.append(key, user[key]));\n\n    return this.service.post('/signup', formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n    })\n    .then(response => response.data)\n  }\n\n  login = (user) => {\n    return this.service.post('/login', user)\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data);\n  }\n\n  logout = () => {\n    return this.service.get('/logout')\n    .then(response => response.data);\n  }\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from './AuthService';\nimport {Redirect} from \"react-router-dom\";\nimport \"./Signup.css\";\nimport { Link } from \"react-router-dom\";\nexport default class Signup extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username : '',\n      email: '',\n      password: '',\n      // photo: '',\n      redirect: false\n    }\n\n    this.authService = new AuthService();\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    const {username , email, password} = this.state;\n\n    this.authService.signup({username, email, password })\n    .then(user => {\n\n      this.setState({username : '', email: '', password: '',redirect: true},()=>\n      this.props.getUser(user) )\n    });\n  }\n\n  handleChange = (e) => {\n    const {name, value} = e.target;\n\n    // if(name === \"photo\") {\n    //   this.setState({...this.state, photo: e.target.files[0]})\n    // } else {\n      this.setState({...this.state, [name]: value});\n    // }\n  }\n\n  render() {\n    if(this.state && this.state.redirect) {\n      return <Redirect to=\"/profile\" />\n    }\n\n    return (\n      <div class=\"register-container\">\n        <h2>Signup</h2>\n        <form onSubmit={this.handleFormSubmit} class=\"form\">\n          <label>Nombre de usuario</label>\n          <input type=\"text\" name=\"username\" onChange={e => this.handleChange(e)} />\n\n          <label>Email</label>\n          <input type=\"email\" name=\"email\" onChange={e => this.handleChange(e)} />\n\n          <label>Contraseña</label>\n          <input type=\"password\" name=\"password\" onChange={e => this.handleChange(e)} />\n\n\n          {/* <label>Photo</label>\n          <input type=\"file\" name=\"photo\" onChange={e => this.handleChange(e)} /> */}\n\n          <input type=\"submit\" value=\"Signup\"/>\n        </form>\n        <div class=\"center-text\">\n        <p>¿Tienes una cuenta?</p><Link id=\"orange-text\" to=\"/login\">Login</Link>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from './AuthService';\nimport { Route, Redirect, Link } from \"react-router-dom\";\n\nexport default class Login extends Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      username: '',\n      password: '',\n      redirect: false\n    }\n\n    this.authService = new AuthService();\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    \n    const {username, password} = this.state;\n    this.authService.login({username, password})\n    .then(user => {\n\n// debugger\n      \n      this.setState({...this.state, redirect : true}, () => {\n        this.props.getUser(user)\n      })\n      \n    }) \n\n\n  }\n\n  handleChange = (e) => {\n    const {name, value} = e.target;\n\n    this.setState({[name]: value}); \n  }\n\n  render() {\n      if(this.state.redirect){\n        console.log(\"entra\")\n        return <Redirect to=\"/profile\"/>\n      }\n    \n    return (\n      \n      <div class=\"register-container adjust-login-container\">\n        <h2>Login</h2>\n        <form onSubmit={this.handleFormSubmit} class=\"form\">\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" onChange={e => this.handleChange(e)} />\n\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" onChange={e => this.handleChange(e)} />\n\n         <input type=\"submit\" value=\"Login\"/>\n        </form>\n        <div class=\"center-text\">\n        <p>¿No tienes cuenta?</p><Link id=\"orange-text\" to=\"/signup\">Regístrate</Link>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Home.css\";\nimport Signup from \"./auth/Signup\";\nimport Login from \"./auth/Login\";\nimport { Route, Link } from \"react-router-dom\";\n// import Signup from \"./auth/Signup\";\n// import Login from \"./auth/Login\";\n// import Message from \"./Message\";\nimport AuthService from \"./auth/AuthService\";\n// import { Route, Link } from \"react-router-dom\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.props.fetchUser();\n    this.AuthService = new AuthService();\n    this.state = {\n      showSignupOrLogin: null,\n    }\n  }\n  toggleSignupLogin =()=>{\n  this.setState({...this.state, showSignupOrLogin: true,})\n  }\n\n  render() {\n    return (\n<div>\n      <header>\n      <div class=\"register\">\n        <div>\n        <Route\n            path=\"/signup\"\n            render={() => <Signup getUser={this.props.getUser}\n            fetchUser={this.props.fetchUser}\n            />}\n          />\n        </div>\n        <div class=\"register-buttons\">\n          <Route\n            path=\"/login\"\n            render={() => <Login getUser={this.props.getUser} />}\n          />\n          {!this.state.showSignupOrLogin ? (\n            <div>\n          <button><Link onClick={this.toggleSignupLogin} to=\"/signup\">Regístrate</Link></button>\n           <button><Link onClick={this.toggleSignupLogin} to=\"/login\">Login</Link></button>\n            </div>\n\n          ): (\n            <div></div>\n          )}\n\n        </div>\n        </div>\n      <div class=\"background-image\">\n      <img src=\"/images/barimg.png\" alt=\"\"/>\n      </div>\n      \n      </header>\n      <section className=\"mainText\">\n      <h3>Rutas gastronómicas por el mundo</h3>\n        <p>\n        Imagine un viaje repleto de detalles gastronómicos, en el que usted disfrute de cada lugar y de su cultura gastronómica. Olvídese de reservas, solo tendrá que disfrutar de su viaje . Descubra en nuestra selección de rutas una forma diferente de viajar por España. Podrá crear su propia ruta comiendo en los restaurnates que desee disfrutando así de la mejor gastronomía local. En The Food Routes, no se tendrá que preocupar por ningun detalle, tan solo de disfrutar de las mejores propuestas para hacer de su viaje un viaje de ensueño.\n        </p>\n      <hr/>\n      </section>\n      <section class=\"carrusel-img\">\n        <img src=\"/images/carrusel.png\" alt=\"\"/>\n      </section>\n      <hr/>\n      <section className=\"mainText\">\n      <h3>Rutas gastronómicas por el mundo</h3>\n        <p>\n      Cree su propia ruta o simplemente inscribase en las creadas por otros usuarios. Podrá conocer nuevos lugares, disfrutar de los mejores restaurantes según sus gustos y conocer a los próximos compañeros de aventura.\n        </p>\n      </section>\n\n<footer>\n  Copyright 2018 Jorge Devesa & Ángel Terrón\n</footer>\n     </div>\n\n    );\n  }\n}\n","/* eslint-disable no-undef */\n/* global google */\nimport React, { Component } from \"react\";\nimport { FaAnchor } from \"react-icons/fa\";\nimport \"./Map.css\"\n\nimport { compose, withProps, lifecycle } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  DirectionsRenderer,\n  InfoWindow,\n  Marker,\n} from \"react-google-maps\";\n\n// const sendRouteData = this.props.sendRouteData.restaurants;\n// console.log(sendRouteData);\nconst demoFancyMapStyles = require(\"./demoFancyMapStyles.json\");\n\nconst MapWithADirectionsRenderer = compose(\n  \n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyB8NzS5RBf23YH2cAwWi8t0HlpwPfqB6no&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withScriptjs,\n  withGoogleMap,\n  lifecycle({\n    componentDidMount() {\n      let restaurants = this.props.sendRouteData.restaurants;\n      const DirectionsService = new google.maps.DirectionsService();\n      \n      let waypointsArr = []\n         restaurants.map((restaurant,index) => {\n           console.log(restaurant)\n          if((index !== 0) && (index !== (restaurants.length-1))){\n            waypointsArr.push({location: new google.maps.LatLng(restaurant.coordinates.latitude,restaurant.coordinates.longitude)})           \n          }\n        })\n        console.log(waypointsArr)\n        \n      DirectionsService.route({\n        origin: new google.maps.LatLng(restaurants[0].coordinates.latitude, restaurants[0].coordinates.longitude),\n         waypoints: waypointsArr,\n        // restaurants.map((restaurant,index) => {\n       \n        //   // if((index !== 0) || (index !== restaurants.length-1)){\n        //     // console.log(restaurant)\n        //     console.log(\"holaa\",index, restaurant)\n        //     return (\n        //       {\n        //           location: new google.maps.LatLng(restaurant.coordinates.latitude,restaurant.coordinates.longitude)\n        //       }\n        //     )\n        //   // }\n        // }),\n        destination: new google.maps.LatLng(restaurants[restaurants.length-1].coordinates.latitude, restaurants[restaurants.length-1].coordinates.longitude),\n        travelMode: google.maps.TravelMode.WALKING,\n     }, (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n           this.setState({\n              directions: result,\n           });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n     });\n    },\n\n    componentDidUpdate(preProps) {\n      let restaurants = this.props.sendRouteData.restaurants;\n      let waypointsArr = []\n      restaurants.map((restaurant,index) => {\n        console.log(restaurant)\n       if((index !== 0) && (index !== (restaurants.length-1))){\n         waypointsArr.push({location: new google.maps.LatLng(restaurant.coordinates.latitude,restaurant.coordinates.longitude)})           \n       }\n     })\n      const DirectionsService = new google.maps.DirectionsService();\n      // console.log(restaurants)\n      DirectionsService.route({\n        origin: new google.maps.LatLng(restaurants[0].coordinates.latitude, restaurants[0].coordinates.longitude),\n        destination: new google.maps.LatLng(restaurants[restaurants.length-1].coordinates.latitude, restaurants[restaurants.length-1].coordinates.longitude),\n        travelMode: google.maps.TravelMode.WALKING,\n        waypoints: waypointsArr\n     }, (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n           this.setState({\n              directions: result,\n           });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n     });\n    }\n  })\n)(props => (\n  \n  <GoogleMap\n    defaultZoom={7}\n    defaultCenter={{ lat: -34.397, lng: 150.644 }}\n    defaultOptions={{ styles:[\n      {\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n          {\n            \"color\": \"#212121\"\n          }\n        ]\n      },\n      {\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n          {\n            \"visibility\": \"off\"\n          }\n        ]\n      },\n      {\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n          {\n            \"color\": \"#757575\"\n          }\n        ]\n      },\n      {\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n          {\n            \"color\": \"#212121\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n          {\n            \"color\": \"#757575\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"administrative.country\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n          {\n            \"color\": \"#9e9e9e\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"administrative.land_parcel\",\n        \"stylers\": [\n          {\n            \"visibility\": \"off\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"administrative.locality\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n          {\n            \"color\": \"#bdbdbd\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"poi\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n          {\n            \"visibility\": \"off\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"poi\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n          {\n            \"color\": \"#757575\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"poi.business\",\n        \"stylers\": [\n          {\n            \"visibility\": \"off\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n          {\n            \"color\": \"#181818\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n          {\n            \"color\": \"#616161\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n          {\n            \"color\": \"#1b1b1b\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"road\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n          {\n            \"color\": \"#2c2c2c\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n          {\n            \"visibility\": \"off\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n          {\n            \"color\": \"#8a8a8a\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n          {\n            \"color\": \"#373737\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n          {\n            \"color\": \"#3c3c3c\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"road.highway.controlled_access\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n          {\n            \"color\": \"#4e4e4e\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n          {\n            \"color\": \"#616161\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"transit\",\n        \"stylers\": [\n          {\n            \"visibility\": \"off\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"transit\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n          {\n            \"color\": \"#757575\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n          {\n            \"color\": \"#000000\"\n          }\n        ]\n      },\n      {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n          {\n            \"color\": \"#3d3d3d\"\n          }\n        ]\n      }\n    ]\n    \n    \n    \n    }}\n  >\n\n    {props.directions && <DirectionsRenderer directions={props.directions} options= {{polylineOptions: { strokeColor: \"orange\"}}} />}\n{/* \n    <Marker\n      position={{ lat: -34.397, lng: 150.644 }}\n      onClick={props.onToggleOpen}\n      options={{icon:'../../../public/images/icono.jpg'}}\n    >\n      {props.isOpen && <InfoWindow onCloseClick={props.onToggleOpen}>\n        <FaAnchor />\n      </InfoWindow>}\n    </Marker> */}\n  </GoogleMap>\n));\n\n\nexport default class MapTest extends Component {\n  // constructor(props){\n  //   super(props)\n    \n\n  // }\n  \n  render() {\n    if(this.props.sendRouteData){\n      // console.log(this.props.sendRouteData)\n      return (\n        <div>\n          <MapWithADirectionsRenderer sendRouteData={this.props.sendRouteData}/>\n        </div>\n\n      );\n\n    }else{\n      return <p></p>\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./YourRoutes.css\";\nimport MapTest from \"../../Map/MapTest\";\n\nexport default class YourRoutes extends Component {\n  constructor(props) {\n    super(props);\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/tracks`,\n      withCredentials: true\n    });\n\n    this.state = {\n      createRoutes: {\n        routesName: \"\",\n        category: \"\",\n        routesType: \"\"\n      },\n      userRoutes: [{}],\n      restaurant: null,\n      showRouteData: null\n    };\n    this.routes = [];\n    this.getUserRoutes();\n  }\n\n  // PETICIÓN DE TODAS LAS RUTAS DEL USUARIO\n  getUserRoutes = () => {\n    return this.service\n      .get(\"/\")\n      .then(response => {\n        let userRoutesArr = response.data.track.createdTrack;\n        this.setState({ ...this.state, userRoutes: userRoutesArr });\n        return response;\n      })\n      .catch(err => console.log(err));\n  };\n\n  // CREAR RUTAS\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { routesName, category, routesType } = this.state.createRoutes;\n    this.getRoute({ routesName, category, routesType }).then(route => {\n      let id = route.data._id;\n      // console.log(route.data._id)\n      this.props.createRoutes(route.data);\n      // this.setState({ ...this.state, id }); /// hay que tratarlo. Llega como array\n      this.getUserRoutes();\n    });\n  };\n\n  // handleChangeCREATE = e => {\n  //   const { name, value } = e.target;\n  //   let newRoute = this.state.createRoutes;\n  //   newRoute[name] = value;\n  //   console.log(newRoute);\n  //   this.setState({ ...this.state, createRoutes: newRoute });\n  // };\n\n  getRoute = route => {\n    return this.service.post(\"/createTrack\", route).then(response =>\n      // response)\n      {\n        // console.log(response)\n        return response;\n      }\n    );\n  };\n\n  // ACTUALIZAR RUTAS\n  handleFormSubmitUPDATE = (e, id) => {\n    e.preventDefault();\n    const { routesName, category, routesType } = this.state.createRoutes;\n    this.updateRoute({ routesName, category, routesType }, id).then(route => {\n      console.log(route.data.routesName);\n      this.getUserRoutes();\n      // this.props.getRoute(route.data.routesName) /// hay que tratarlo. Llega como array\n    });\n  };\n\n  handleChangeUPDATE = e => {\n    const { name, value } = e.target;\n    let newRoute = this.state.createRoutes;\n    newRoute[name] = value;\n    console.log(newRoute);\n    this.setState({ ...this.state, createRoutes: newRoute });\n  };\n\n  updateRoute = (route, id) => {\n    return this.service.post(`/${id}/update`, route).then(response => {\n      return response;\n    });\n  };\n\n  // BORRAR RUTAS\n  deleteRoute = (e, id) => {\n    e.preventDefault();\n    return this.service.post(`/${id}/delete`, id).then(response => {\n      this.getUserRoutes();\n      return response;\n    });\n  };\n\n  // showRoutesDetails = route => {\n  //   console.log(\"entra\");\n  //   this.state.showRouteData\n  //     ? this.setState({ ...this.state, showRouteData: null })\n  //     : this.setState({ ...this.state, showRouteData: route });\n  // };\n  showRoutesDetails = route => {\n    this.setState({ ...this.state, showRouteData: route });\n    this.props.scrollToRecipe()\n  };\n\n  showAllYourRoutes = () => {\n    this.setState({ ...this.state, showRouteData: null });\n  };\n\n  componentDidMount(){\n    this.props.scrollToRecipe()\n  }\n  render() {\n    console.log(this.state.showRouteData);\n\n    const userRoutes = this.state.userRoutes ? (\n      <div className=\"show-route-container\">\n        {this.state.userRoutes.map((track, index) => {\n          return (\n            <div className=\"yourRoutes-container\" key={track._id}>\n              <div>\n                <div\n                  className=\"each-Route\"\n                  onClick={() => this.showRoutesDetails(track)}\n                  style={{ backgroundImage: `url(${track.image})` }}\n                >\n                  <div className=\"route-details\">\n                    <h3>{track.routesName}</h3>\n                    <p>Categoría: {track.category}</p>\n                  </div>\n                </div>\n              </div>\n              <form\n                className=\"form-container\"\n                onSubmit={e => this.handleFormSubmitUPDATE(e, track._id)}\n              >\n                <label>Actualizar rutas: </label>\n                <input\n                  type=\"text\"\n                  name=\"routesName\"\n                  onChange={e => this.handleChangeUPDATE(e)}\n                  placeholder=\"Nombre de la ruta\"\n                  autoComplete=\"off\"\n                />\n                <input\n                  type=\"text\"\n                  name=\"category\"\n                  onChange={e => this.handleChangeUPDATE(e)}\n                  placeholder=\"Categoría\"\n                  autoComplete=\"off\"\n                />\n                <input\n                  type=\"text\"\n                  name=\"routesType\"\n                  onChange={e => this.handleChangeUPDATE(e)}\n                  placeholder=\"Tipo de ruta\"\n                  autoComplete=\"off\"\n                />\n                {/* <input\n          type=\"file\"\n          name=\"Photo\"\n          onChange={e => this.handleChangeUPDATE(e)}\n        /> */}\n                <input type=\"submit\" />\n                {/* <input type=\"text\" name=\"location\" onChange={e => this.handleChange(e)} /> */}\n              </form>\n              {/* <img src={`${track.image_url}`} style={{ width: \"10%\" }} /> */}\n\n              <form\n                className=\"form-delete\"\n                onSubmit={e => this.deleteRoute(e, track._id)}\n              >\n                <input value=\"X\" type=\"submit\" />\n              </form>\n            </div>\n          );\n        })}\n      </div>\n    ) : (\n      \"no hay rutas\"\n    );\n\n    const showRouteDetails = this.state.showRouteData;\n    const showRouteData = showRouteDetails ? (\n      <div className=\"menu-half-routes\">\n        <div className=\"menu-routes-container\">\n          <h3>Rutas:</h3>\n          {this.state.userRoutes.map(userRoute => {\n            console.log(userRoute);\n            return (\n              <div\n                className=\"each-route-container\"\n                onClick={() => this.showRoutesDetails(userRoute)}\n              >\n                <h4>{userRoute.routesName}</h4>\n                <h5>Categoría :{userRoute.category}</h5>\n                <h5>Duración: {userRoute.duration}</h5>\n                <h5>Fecha: {userRoute.date}</h5>\n                <h5>Hora inicio: {userRoute.hour}</h5>\n                <hr />\n              </div>\n            );\n          })}\n          <button onClick={this.showAllYourRoutes}>\n            Mostrar todas tus rutas\n          </button>\n        </div>\n\n        <div id=\"stops-container\">\n          <h3>Itinerario:</h3>\n          {this.state.showRouteData.restaurants.map(\n            (restaurantOfRoute, index) => {\n              return (\n                <div className=\"each-stop-container\">\n                  <img src={restaurantOfRoute.restaurantPhoto} />\n                  <h2>\n                    <img src=\"./images/ImportedLayers.png\" alt=\"\" /> {index + 1}\n                    : {restaurantOfRoute.restaurantName}\n                  </h2>\n                  <h4>\n                    Puntuación: {restaurantOfRoute.rating}, {\" \"}Precio:{\" \"}\n                    {restaurantOfRoute.price}, Teléfono:{\" \"}\n                    {restaurantOfRoute.phone}{\" \"}\n                  </h4>\n                </div>\n              );\n            }\n          )}\n        </div>\n      </div>\n    ) : (\n      <div>{userRoutes}</div>\n    );\n\n    return (\n      <div className=\"yourRoutes-big-container\">\n        <h1>Tus rutas</h1>\n        {showRouteData}\n        <div className=\"map\">\n          {<MapTest sendRouteData={this.state.showRouteData} />}\n        </div>\n        {/* Borrar componente TestMapasBorrar y archivo una vez echas las pruebas */}\n        {/* {<TestMapasBorrar />}  */}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass InputYelp extends Component {\n  constructor(props) {\n    super(props);\n    this.service = axios.create({\n      baseURL:`${process.env.REACT_APP_API_URL}/yelp`,\n      withCredentials: true\n    });\n    this.state = {\n      restaurant: {\n        term: \"\",\n        location: \"\"\n      },\n\n    };\n\n  }\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { term, location} = this.state.restaurant;\n    this.getRestaurants( {term, location })\n    .then(restaurant =>{\n      console.log(restaurant)\n      this.props.getRestaurants(restaurant)\n      this.setState({...this.state, })\n      \n      // this.props.getRestaurant(restaurant.name) /// hay que tratarlo. Llega como array\n    });\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    let searchRestaurant = this.state.restaurant;\n    searchRestaurant[name] = value;\n    this.setState({...this.state, restaurant: searchRestaurant});\n  };\n\n  // Función que envía los datos al back, a la ruta /yelp\n  getRestaurants = (term, location) => {\n    return this.service.post(\"/yelp\", {term, location})\n    .then(response =>\n        {\n        return response.data.map((e)=>{\n        return {e} \n           })\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className=\"center-form-yelp\" onSubmit={e => this.handleFormSubmit(e, this.props.state)}>\n          <input\n            type=\"text\"\n            name=\"term\"\n            placeholder=\"Buscar restaurantes\"\n            onChange={e => this.handleChange(e)}\n            autoComplete=\"off\"\n          />\n          <input\n            type=\"text\"\n            name=\"location\"\n            placeholder=\"Ubicación\"\n            onChange={e => this.handleChange(e)}\n            autoComplete=\"off\"\n          />\n          <input type=\"submit\"/>\n          {/* <input type=\"text\" name=\"location\" onChange={e => this.handleChange(e)} /> */}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default InputYelp;","import React, { Component } from \"react\";\nimport InputYelp from \"../YourRoutes/yelp\";\nimport axios from \"axios\";\n\nexport default class CreateRoutes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      createRoutes: {\n        routesName: \"\",\n        category: \"\",\n        routesType: \"\"\n      },\n      restaurant: null,\n      restaurants: []\n    };\n\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/tracks`,\n      withCredentials: true\n    });\n  }\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const {\n      routesName,\n      category,\n      photo,\n      date,\n      hour,\n      duration\n    } = this.state.createRoutes;\n    this.getRoute({ routesName, category, photo, date, hour, duration }).then(\n      route => {\n        //   let id = route.data._id;\n        this.props.createRoutes(route.data);\n        this.setState({ ...this.props.state, createRoutes: null });\n        // this.setState({ ...this.state, id }); /// hay que tratarlo. Llega como array\n      }\n    );\n  };\n\n  handleChangeCREATE = e => {\n    let newRoute = this.state.createRoutes;\n    const { name, value } = e.target;\n    if (name === \"photo\") {\n      newRoute[name] = e.target.files[0];\n      this.setState({ ...this.state, newRoute });\n      console.log(this.state.createRoutes);\n    } else {\n      newRoute[name] = value;\n      this.setState({ ...this.state, newRoute });\n    }\n  };\n\n  getRoute = route => {\n    const formData = new FormData();\n    Object.keys(route).forEach(key => formData.append(key, route[key]));\n    formData.append(\n      \"selectedRestaurants\",\n      JSON.stringify(this.state.restaurants)\n    );\n\n    return this.service\n      .post(\"/createTrack\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(response => {\n        //  this.props.getUser(response.data)\n        return response;\n      });\n  };\n  // Función que recibe los datos de yelp.js\n  getRestaurants = restaurant => {\n    this.setState({ ...this.state, restaurant: restaurant });\n  };\n\n  addRestaurant = restaurant => {\n    const restaurants = [...this.state.restaurants];\n\n    restaurants.push(restaurant.e);\n\n    this.setState({ ...this.state, restaurants });\n  };\n\n  render() {\n    const restaurants = this.state.restaurant ? (\n      <div className=\"show-route-container\">\n        {this.state.restaurant.map(restaurant => {\n          return (\n            <div className=\"yourRoutes-container\">\n              <div\n                className=\"each-Route\"\n                style={{ backgroundImage: `url(${restaurant.e.image_url})` }}\n              />\n              <div className=\"form-container\">\n                <h3>{restaurant.e.name}</h3>\n                <p>{restaurant.e.location.address1}</p>\n                <p>{restaurant.e.price}</p>\n                <button onClick={() => this.addRestaurant(restaurant)}>\n                  Añadir parada\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    ) : (\n      <div>{/* <h3>Aún no has añadido paradas</h3> */}</div>\n    );\n\n    let selectedRestaurants = \"Aún no has seleccionado ningún restaurante.\";\n\n    if (this.state.restaurants.length) {\n      selectedRestaurants = this.state.restaurants.map(restaurant => {\n        return <p>- {restaurant.name}</p>;\n      });\n    }\n\n    return (\n      <div>\n        <div className=\"yourRoutes-big-container\">\n\n            <h1>Crear rutas</h1>\n\n            <InputYelp\n              scrollToRecipe={this.props.scrollToRecipe}\n              getRestaurants={this.getRestaurants}\n              restaurants={this.props.restaurants}\n              handleFormSubmit={this.handleFormSubmit}\n              handleChange={this.handleChange}\n            />\n            <div className=\"center-form\">\n              <label>Restaurantes añadidos:</label>\n              <label>{selectedRestaurants}</label>\n            </div>\n            <form\n              className=\"center-form\"\n              onSubmit={e => this.handleFormSubmit(e)}\n            >\n              <div clasName=\"form-inputs\">\n                <input\n                  type=\"text\"\n                  name=\"routesName\"\n                  onChange={e => this.handleChangeCREATE(e)}\n                  placeholder=\"Nombre de la ruta\"\n                  autoComplete=\"off\"\n                />\n                <input\n                  type=\"text\"\n                  name=\"category\"\n                  onChange={e => this.handleChangeCREATE(e)}\n                  placeholder=\"Categoría\"\n                  autoComplete=\"off\"\n                />\n                {/* <label htmlFor=\"\">Fecha: </label> */}\n                <input\n                  type=\"date\"\n                  name=\"date\"\n                  onChange={e => this.handleChangeCREATE(e)}\n                  placeholder=\"Fecha\"\n                  autoComplete=\"off\"\n                />\n                {/* <label htmlFor=\"\">Hora: </label> */}\n                <input\n                  type=\"time\"\n                  name=\"hour\"\n                  onChange={e => this.handleChangeCREATE(e)}\n                  placeholder=\"Hora de inicio\"\n                  autoComplete=\"off\"\n                />\n                <input\n                  type=\"text\"\n                  name=\"duration\"\n                  onChange={e => this.handleChangeCREATE(e)}\n                  placeholder=\"Duración\"\n                  autoComplete=\"off\"\n                />\n\n                <input\n                  type=\"file\"\n                  name=\"photo\"\n                  onChange={e => this.handleChangeCREATE(e)}\n                />\n              </div>\n              <div className=\"form-inputs\">\n                <input value=\"Crear ruta\" type=\"submit\" />\n              </div>\n            </form>\n            <div />\n\n\n          {restaurants}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nexport default class SavedRoutes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      showSavedRoutes: null\n    };\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/tracks`,\n      withCredentials: true\n    });\n    this.getUserRoutes();\n  }\n  showSavedRoutesButton = () => {\n    this.setState({ ...this.state, showSavedRoutes: true });\n  };\n  getUserRoutes = () => {\n    return this.service\n      .get(\"/\")\n      .then(response => {\n        let userRoutesArr = response.data.track;\n        this.setState({ ...this.state, user: userRoutesArr });\n        console.log(this.state.user);\n        return response;\n      })\n      .catch(err => console.log(err));\n  };\n  \n  render() {\n    return (\n      <div>\n                <div className=\"yourRoutes-big-container\">\n        <h1 className=\"align-center\">Tus rutas guardadas</h1>\n          <div className=\"show-route-container\">\n        {this.state.user.savedRoutes.map(element => {\n          return (\n            \n            <div className=\"yourRoutes-container\">\n              <div\n                className=\"each-Route\"\n                style={{ backgroundImage: `url(${element.image})` }}\n              />\n              {console.log(element)}\n              {/* <h1>{element.creatorID[0].username}</h1> */}\n              <h2>{element.routesName}</h2>\n              <h3>{element.routesType}</h3>\n              <h4>{element.category}</h4>\n            </div>\n          );\n        })}\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport YourRoutes from \"../YourRoutes/YourRoutes\";\nimport CreateRoutes from \"../CreateRoutes/CreateRoutes\";\nimport { div } from \"gl-matrix/src/gl-matrix/vec2\";\nimport \"./Profile.css\";\nimport SavedRoutes from \"../YourRoutes/SavedRoutes/SavedRoutes\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/editProfile`,\n      withCredentials: true\n    });\n    this.state = {\n      user: this.props.user,\n      userRoutes: this.props.user,\n      createRoutesToggle: null,\n      showUpdateProfileButton: true,\n      yourRoutes: true\n    };\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { username, email, photo } = this.state.user;\n    this.updateProfile({ username, email, photo });\n  };\n\n  handleChange = e => {\n    const user = { ...this.state.user };\n    const { name, value } = e.target;\n    if (name === \"photo\") {\n      user[name] = e.target.files[0];\n      this.setState({ ...this.state, user });\n    } else {\n      user[name] = value;\n      this.setState({ ...this.state, user });\n    }\n  };\n\n  updateProfile = user => {\n    console.log(user);\n    const formData = new FormData();\n    Object.keys(user).forEach(key => formData.append(key, user[key]));\n\n    return this.service\n      .post(\"/details\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(response => {\n        this.props.getUser(response.data);\n      });\n  };\n  createRouteButton = () => {\n    this.state.createRoutesToggle\n      ? this.setState({ ...this.state, createRoutesToggle: null })\n      : this.setState({ ...this.state, createRoutesToggle: true });\n    this.scrollToRecipe();\n  };\n\n  createRoutes = route => {\n    this.setState({ ...this.state, createRoutesToggle: null });\n  };\n\n  showUpdateProfileButton = () => {\n    this.state.showUpdateProfileButton\n      ? this.setState({ ...this.state, showUpdateProfileButton: null })\n      : this.setState({ ...this.state, showUpdateProfileButton: true });\n  };\n\n  changeRoutes = () => {\n    this.state.yourRoutes\n      ? this.setState({ ...this.state, yourRoutes: null })\n      : this.setState({ ...this.state, yourRoutes: true });\n    this.scrollToRecipe();\n  };\n  scrollToRecipe = () => {\n    window.scrollBy({\n      top: document.querySelector(\"body\").clientHeight, // could be negative value\n      left: 0,\n      behavior: \"smooth\"\n    });\n  };\n  componentDidMount() {\n    this.scrollToRecipe();\n  }\n  render() {\n    const showRoutesType = this.state.yourRoutes ? (\n      <div>\n        <button className=\"align-buttoms\" onClick={this.changeRoutes}>\n          Rutas Guardadas\n        </button>\n        <YourRoutes\n          scrollToRecipe={this.scrollToRecipe}\n          userRoutes={this.userRoutes}\n          createRoutes={this.props.createRoutes}\n          handleFormSubmit={this.handleFormSubmit}\n          handleChange={this.handleChange}\n        />\n      </div>\n    ) : (\n      <div>\n        <button className=\"align-buttoms\" onClick={this.changeRoutes}>\n          Tus publicaciones\n        </button>\n        <SavedRoutes user={this.state.user} />\n      </div>\n    );\n    const createRoutesOrShowRoutes = this.state.createRoutesToggle ? (\n      <section className=\"routes-from-profile\">\n        <button className=\"align-buttoms fix-button\" onClick={this.createRouteButton}>\n          Tus rutas\n        </button>\n        <CreateRoutes\n          scrollToRecipe={this.scrollToRecipe}\n          createRoutes={this.createRoutes}\n          getRoutes={this.getRoutes}\n          state={this.state}\n        />\n      </section>\n    ) : (\n      <div>\n        <button className=\"align-buttoms\" onClick={this.createRouteButton}>\n          Crear Ruta\n        </button>\n        {showRoutesType}\n      </div>\n    );\n\n    const showUpdateProfile = this.state.showUpdateProfileButton ? (\n      <div>\n        {/* <button onClick={this.showUpdateProfileButton}>Volver</button> */}\n        <div>\n          <form  className=\"flex-row\" onSubmit={e => this.handleFormSubmit(e)}>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.user.username}\n              autoComplete=\"off\"\n              onChange={e => this.handleChange(e)}\n            />\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={this.state.user.email}\n              autoComplete=\"off\"\n              onChange={e => this.handleChange(e)}\n            />\n            <input\n              type=\"text\"\n              name=\"taste\"\n              autoComplete=\"off\"\n              value=\"Tus gustos\"\n            />\n            <div className=\"input-fix\">\n\n            <input\n              type=\"file\"\n              name=\"photo\"\n              onChange={e => this.handleChange(e)}\n            />\n            </div>\n            <br />\n            <div>\n              <input type=\"submit\" value=\"Actualizar\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    ) : (\n      <button onClick={this.showUpdateProfileButton}>Editar perfil</button>\n    );\n    return (\n      <div>\n        <div id=\"profile-details\">\n          <img id=\"profile-photo\" src={this.state.user.imgPath} alt=\"\" />\n          <div id=\"profile-details-container\">\n            <h1>{this.state.user.username}</h1>\n            <h4>{this.state.user.email}</h4>\n            {showUpdateProfile}\n          </div>\n        </div>\n\n\n        {createRoutesOrShowRoutes}\n        {/* {createRoute} */}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Route, Link } from \"react-router-dom\";\nimport \"./NavBar.css\"\n\n\nexport default class NavBar extends Component {\n  render() {\n    return (\n      <div>\n        <nav>\n            <div>\n\n            </div>\n            <div class=\"navbar\">\n            <div>\n              <img className=\"logo\" src=\"./images/logo.png\"/>\n            </div>\n            <div>\n            <Link to=\"/profile\"><img src=\"./images/manifest.png\" alt=\"profile\"/></Link>\n            <Link to=\"/allRoutes\"><img src=\"./images/ruta.svg\" alt=\"profile\"/></Link>\n            <img src=\"./images/logout.png\" alt=\"logout\"onClick={this.props.logout}/>\n            </div>\n            </div>\n        </nav>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./AllRoutes.css\"\nexport default class AllRoutes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allRoutes: null,\n\n    };\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/tracks`,\n      withCredentials: true\n    });\n    this.getAllRoutes();\n  }\n\n  getAllRoutes = () => {\n    this.service.get(\"/allRoutes\")\n    .then(response => {\n      this.setState({ ...this.state, allRoutes: response.data.track });\n      \n    })\n\n  };\n\n  followTrack = (e, id) => {\n    // debugger\n    e.preventDefault()\n    return this.service.post(`/${id}/followRoutes`, id) //le paso la id del track\n    .then((response)=> {\n return\n    })\n  }\n  render() {\n\n    const printAllRoutes = this.state.allRoutes ? (\n\n      this.state.allRoutes.map(element => {\n        return (\n          <div className=\"yourRoutes-container\">\n                <div\n                  className=\"each-Route\"\n                  style={{ backgroundImage: `url(${element.image})` }}\n                >\n            <div className=\"show-user-on-routes\">\n          <img src={element.creatorID[0].imgPath}/>\n            <label className=\"margin-user-creator\">{element.creatorID[0].username}</label>\n                </div>\n            {console.log(element)}\n\n            </div>\n            <div className=\"form-container margin-bottom-container-routes\">\n            <h3>{element.routesName}</h3>\n            {/* <h3>{element.routesType}</h3> */}\n            {/* <h4>{element.category}</h4> */}\n            {element.restaurants.map((restaurant)=>{\n              return(\n                <div className=\"each-stop-on-target\">\n                <hr></hr>\n               \n                <div className=\"flex-space-between\">\n                  <a href={restaurant.url}><h4><img src=\"./images/ImportedLayers.png\" alt=\"\" />{restaurant.restaurantName}</h4></a>\n                </div>\n                <div  className=\"restaurant-detail-container\">\n                <h5> Puntuación: {restaurant.rating}</h5>\n                <h5>{restaurant.location.city}</h5>\n                  </div>\n                </div>\n              )\n            })}\n            {/* <p>{element.creatorID[0].username}</p> */}\n\n      <button onClick={e => this.followTrack(e, element._id)}>follow</button>\n            </div>        \n          </div>\n        );\n      })\n\n    ) : (\n      <h1></h1>\n    );\n    return (\n      <div>\n        <h1 className=\"align-center\">Todas las rutas</h1>\n      <div className=\"yourRoutes-big-container\">\n      <div className=\"show-route-container\">\n\n        {printAllRoutes}\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./reset.css\"\nimport \"./App.css\";\nimport Message from \"./components/Message\";\nimport AuthService from \"./components/Home/auth/AuthService\";\nimport { Route, Link, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Profile from \"./components/Profile/ProfileContainer/ProfileContainer\";\nimport InputYelp from \"./components/Profile/YourRoutes/yelp\";\nimport NavBar from \"./components/Navbar/NavBar\";\nimport AllRoutes from \"./components/AllRoutes/AllRoutes\"\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      user: null,\n      route: null\n    };\n    \n    this.authService = new AuthService();\n    this.inputYelp = new InputYelp();\n    this.fetchUser();\n  }\n  // mantener al usuario loggeado incluso al refrescar ¿?\n  fetchUser = () => {\n    this.authService\n      .loggedin()\n      .then(user => this.setState({ ...this.state, user }));\n  };\n\n  //todo: setUser instead of getuser\n  getUser = user => {\n    this.setState({ ...this.state, user });\n  };\n\n  logout = () => {\n    this.authService\n      .logout()\n      .then(() => this.setState({ ...this.state, user: null }));\n  };\n\n\n  createRoutes = route => {\n    console.log(\"función: createRoutes. Recibe: (siguiente console.log\")\n    console.log(route)\n    this.setState({...this.state, route: route})\n  }\n\n\n\n  render() {\n\n    const welcome = this.state.user ? (\n      <div>\n        <NavBar logout={this.logout}></NavBar>\n\n        <Route\n          path=\"/profile\"\n          render={() => <Profile getUser={this.getUser} user ={this.state.user} createRoutes={this.createRoutes} />}\n        />\n        <Route path=\"/allRoutes\" render={()=> <AllRoutes getUser={this.getUser}/>}></Route>\n\n      </div>\n    ) : (\n      <Route\n        path=\"/\"\n        render={() => (\n          <Home getUser={this.getUser} fetchUser={this.fetchUser} />\n        )}\n      />\n    );\n\n\n    return (\n      <div className=\"App\">\n      \n        {welcome}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}